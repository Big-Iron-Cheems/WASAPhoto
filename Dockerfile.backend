# Build using `sudo docker build -t backend:latest -f Dockerfile.backend .`
# Run using `sudo docker run -it --rm -p 3000:3000 -p 4000:4000 backend:latest`

# Set base image
FROM golang:1.19-alpine AS builder

# Install build dependencies, used by go-sqlite3
RUN apk add --no-cache gcc musl-dev

# Copy golang project
WORKDIR /src/

# Cache dependencies (if go.mod or go.sum hasn't changed)
COPY go.mod go.sum ./
RUN go mod download

# Copy the rest of the project
COPY . .

# Build the backend
RUN CGO_ENABLED=1 GOOS=linux go build -ldflags='-s -w -extldflags="-static"' -mod=vendor -a -o /app/webapi ./cmd/webapi

# Create final image
FROM alpine:latest

# Expose the ports used by the webapi
EXPOSE 3000 4000

# Copy the webapi binary from the builder image
WORKDIR /app/
COPY --from=builder /app/webapi ./

# Run the webapi
CMD ["/app/webapi"]
